service: allowlist-api

plugins:
  - 'serverless-plugin-typescript'
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-plugin-warmup

package:
  include:
    - 'migrations/**'
    - 'config/**'

provider:
  name: aws
  stage: ${opt:stage, 'staging'}
  runtime: nodejs18.x
  environment:
    SNS_TOPIC_ARN: "arn:aws:sns:us-east-1:987989283142:simoteam-test.fifo"
  memorySize: 4086
  timeout: 900
  cors: true

custom:
  warmup:
    default:
      enabled: false
  optimize:
    external:
      [
        'axios',
        'form-data',
        'combined-stream',
        'delayed-stream',
        'mime-types',
        'mime-db',
        'asynckit',
        'proxy-from-env',
        'follow-redirects',
        'swagger-ui-dist',
      ]
    includePaths:
      [
        'node_modules/axios',
        'node_modules/form-data',
        'node_modules/combined-stream',
        'node_modules/delayed-stream',
        'node_modules/mime-types',
        'node_modules/mime-db',
        'node_modules/asynckit',
        'node_modules/proxy-from-env',
        'node_modules/follow-redirects',
      ]

functions:
  main:
    handler: ./src/api-lambda.handler
    name: allowlist-api-${self:provider.stage}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    vpc:
      securityGroupIds:
        - sg-033f6ed509ce4c3a4
        - sg-0b548abc33e4c84a3
      subnetIds:
        - subnet-08dbb020dea1a658d
        - subnet-003b0c8ce57cb67c2
    timeout: 120
    events:
      - http:
          method: any
          path: /{any+}
  queue:
    handler: src/worker-lambda.handler
    name: allowlist-worker-${self:provider.stage}
    role: arn:aws:iam::987989283142:role/lambda-vpc-role
    vpc:
      securityGroupIds:
        - sg-033f6ed509ce4c3a4
        - sg-0b548abc33e4c84a3
      subnetIds:
        - subnet-08dbb020dea1a658d
        - subnet-003b0c8ce57cb67c2